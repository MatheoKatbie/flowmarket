---
alwaysApply: true
description: FlowMarket project structure and architecture guidelines
---

# FlowMarket Project Structure

FlowMarket is a Next.js 15 marketplace for n8n workflows using the App Router pattern with Supabase authentication and Prisma ORM.

## Project Architecture

- **Frontend**: Next.js 15 with App Router, TypeScript, Tailwind CSS
- **Backend**: Next.js API routes, Supabase for auth, PostgreSQL with Prisma
- **UI Components**: Radix UI primitives with custom styling
- **Authentication**: Supabase Auth with custom AuthProvider context
- **Database**: PostgreSQL with Prisma ORM for workflow marketplace schema

## Directory Structure

```
src/
├── app/                    # Next.js App Router pages
│   ├── api/               # API routes 
│   ├── auth/              # Authentication pages (login, register, etc.)
│   ├── layout.tsx         # Root layout with AuthProvider
│   └── page.tsx           # Homepage
├── components/            # React components
│   ├── ui/                # Reusable UI components (Button, Card, etc.)
│   ├── Navbar.tsx         # Navigation component
│   └── VantaBackground.tsx # Background animation
├── hooks/                 # Custom React hooks
│   └── useAuth.tsx        # Authentication hook and provider
├── lib/                   # Utility libraries
│   ├── prisma.ts          # Prisma client setup
│   ├── supabase.ts        # Supabase client (browser)
│   ├── supabase-server.ts # Supabase client (server)
│   ├── userService.ts     # User data operations
│   └── utils.ts           # General utilities
├── types/                 # TypeScript type definitions
│   └── auth.ts            # Authentication types
└── middleware.ts          # Next.js middleware for auth protection
```

## Key Files

- [src/app/layout.tsx](mdc:src/app/layout.tsx) - Root layout with AuthProvider wrapper
- [src/hooks/useAuth.tsx](mdc:src/hooks/useAuth.tsx) - Authentication context and hooks
- [src/middleware.ts](mdc:src/middleware.ts) - Route protection and auth middleware
- [prisma/schema.prisma](mdc:prisma/schema.prisma) - Database schema for workflow marketplace
- [src/types/auth.ts](mdc:src/types/auth.ts) - Authentication type definitions

## Core Patterns

1. **Authentication Flow**: Uses Supabase Auth with custom AuthProvider context
2. **Route Protection**: Middleware handles auth-required routes automatically
3. **Database Access**: Prisma ORM with comprehensive workflow marketplace schema
4. **UI Components**: Composition pattern with Radix UI and class-variance-authority
5. **Type Safety**: Strict TypeScript with path aliases (@/* imports)